package ${target.daoPackageName}.impl;

import $target.fullClassName;
import ${target.queryPackageName}.${target.className}Query;
import com.hundsun.emall.common.dao.BaseDAO;
import ${target.daoPackageName}.${target.className}DAO;
import org.springframework.stereotype.Repository;

import java.sql.SQLException;
import java.util.Date;
import java.util.List;

/**
* @author $configParser.authorInfo
*/
@Repository
public class ${target.className}DAOImpl extends BaseDAO implements ${target.className}DAO {

    private String getNamespace() {
        return "${target.desc}";
    }

    @Override
    public Long insert(${target.className} ${target.lowerStartName}) throws SQLException {
        ${target.lowerStartName}.setGmtCreate(new Date());
        ${target.lowerStartName}.setGmtModify(new Date());
        return (Long) getSqlMapClientTemplate().insert(getNamespace() + ".insert", ${target.lowerStartName});
    }

    @Override
    public ${target.className} selectById(Long id) throws SQLException {
        return (${target.className}) getSqlMapClientTemplate().queryForObject(getNamespace() + ".selectById", id);
    }

    @Override
    public Integer updateById(${target.className} ${target.lowerStartName}) throws SQLException {
        return getSqlMapClientTemplate().update(getNamespace() + ".updateById", ${target.lowerStartName});
    }

    @Override
    public List<${target.className}> listByCondition(${target.className} condition) throws SQLException {
        return getSqlMapClientTemplate().queryForList(getNamespace() + ".listByCondition", condition);
    }

    @Override
    public ${target.className}Query queryLogByPage(${target.className}Query query) throws SQLException {
        Integer count = (Integer) getSqlMapClientTemplate().queryForObject(getNamespace() + ".countByQuery", query);
        query.setTotalItem(count);
        if (count > 0) {
            query.setItems(getSqlMapClientTemplate().queryForList(getNamespace() + ".queryLogPages", query));
        }
        return query;
    }

}
